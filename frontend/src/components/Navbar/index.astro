---
import Base from "./Base";
import SecondaryMenu, { SecondaryMenuLink } from "./SecondaryMenu";
import { PrimaryMenuChildrenWrapper, PrimaryMenuMenuLink } from "./PrimaryMenu";

const response = await fetch(import.meta.env.PUBLIC_STRAPI + "/graphql", {
  method: "POST",
  headers: { "Content-Type": "application/json" },
  body: JSON.stringify({
    query: `
      {
        stredisko {
            data {
                attributes {
                    Nazev
                    SocialniSite {
                        Typ
                        Odkaz
                    }
                    Fotky(pagination: { limit: -1 }) {
                        Nazev
                        Odkaz
                    }
                }
            }
        }
      }
      `,
  }),
});

const Json = await response.json();
const data = Json.data;
---

{/* @ts-ignore */}
<Base Nazev={data.stredisko.data.attributes.Nazev} client:load>
  <SecondaryMenu slot="secondaryMenu">
    {
      data.stredisko.data.attributes.SocialniSite.map((x, i) => (
        <SecondaryMenuLink
          key={i}
          image={{
            alt: x.Typ,
            url:
              x.Typ === "Instagram"
                ? "/ikony/instagram.svg"
                : "/ikony/facebook.svg",
          }}
          link={x.Odkaz}
        />
      ))
    }
    <li class="mr-6 last:mr-0">
      <a
        href={import.meta.env.PUBLIC_STRAPI + "/admin"}
        target="_blank"
        class="text-primary-100 font-bold"
      >
        Spr√°va
      </a>
    </li>
  </SecondaryMenu>
  <PrimaryMenuChildrenWrapper slot="fotky">
    {
      data.stredisko.data.attributes.Fotky.map((x, i) => (
        <PrimaryMenuMenuLink name={x.Nazev} href={x.Odkaz} key={i} />
      ))
    }
  </PrimaryMenuChildrenWrapper>
</Base>
