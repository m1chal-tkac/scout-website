---
import { h1_center } from "../../components/typography";
import { type StrapiImage } from "../../customTypes";
import Layout from "../../layouts/Layout.astro";
import GqlQuery from "../../graphql/novinky/[novinka].gql?raw";
import BlocksRendererClient from "../../components/BlocksRendererClient";

export async function getStaticPaths() {
  const response = await fetch(import.meta.env.PUBLIC_STRAPI + "/graphql", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({
      query: GqlQuery,
    }),
  });

  const Json = await response.json();
  const data = Json.data;

  return data.novinky.data.map((x) => {
    return {
      params: { novinka: x.attributes.Url },
      props: {
        Nazev: x.attributes.Nazev,
        Text: x.attributes.Text,
        publishedAt: x.attributes.publishedAt,
        Obrazek: x.attributes.Obrazek,
        Stredisko: data.stredisko.data.attributes.Nazev,
        Popis: x.attributes.Popis,
      },
    };
  });
}

export interface Props {
  Nazev: string;
  Text: string;
  publishedAt: string;
  Obrazek: StrapiImage;
  Stredisko: string;
  Popis: string;
}

const { Nazev, Text, publishedAt, Obrazek, Stredisko, Popis } = Astro.props;

const date = new Date(publishedAt);

const novinka = Astro.params.novinka;
---

<Layout title={Nazev} topPadding="m">
  <script
    type="application/ld+json"
    slot="head"
    is:inline
    set:html={`{
      "@context": "https://schema.org",
      "@type": "NewsArticle",
      "headline": "${Nazev}",
      "image": "${
        import.meta.env.PUBLIC_STRAPI +
        (Obrazek.data.attributes.formats.small?.url ||
          Obrazek.data.attributes.url)
      }",
      "datePublished": "${publishedAt}",
      "about": "${Popis}"
    }`}
  />

  <meta name="description" content={Popis} slot="head" />

  <meta property="og:title" content={`${Nazev} | ${Stredisko}`} slot="head" />
  <meta property="og:type" content="article" slot="head" />
  <meta
    property="og:url"
    content={import.meta.env.PUBLIC_URL + "/novinky/" + novinka}
    slot="head"
  />
  <meta property="og:description" content={Popis} slot="head" />
  <meta
    property="og:image"
    content={import.meta.env.PUBLIC_STRAPI +
      (Obrazek.data.attributes.formats.medium?.url ||
        Obrazek.data.attributes.url)}
    slot="head"
  />

  <article class="max-w-2xl w-full mx-auto flex items-center flex-col pb-12">
    <h1 class={h1_center + " px-10"}>
      {Nazev}
    </h1>
    <p class="mb-3 mx-auto">
      {date.getDate()}.{date.getMonth() + 1}. {date.getFullYear()}
    </p>
    <img
      src={import.meta.env.PUBLIC_STRAPI +
        (Obrazek.data.attributes.formats.large?.url ||
          Obrazek.data.attributes.url)}
      alt={Nazev}
      class="object-cover max-w-2xl w-full aspect-[3/2] mb-10"
    />
    <div class="w-full max-w-2xl mx-auto px-10">
      <BlocksRendererClient Text={Text} />
    </div>
  </article>
</Layout>
